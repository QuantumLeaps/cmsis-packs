<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<package schemaVersion="1.7.7" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="PACK.xsd">
    <vendor>QuantumLeaps</vendor>
    <name>qpcpp</name>
    <description>QP/C++ RTEF (Real-Time Embedded Framework)</description>
    <url>https://raw.githubusercontent.com/QuantumLeaps/cmsis-packs/main/</url>
    <license>LICENSES/License.txt</license>
    <supportContact>info@state-machine.com.com</supportContact>
    <releases>
        <release date="2024-10-31" tag="v8.0.0" url="https://github.com/QuantumLeaps/qpc/releases/download/v8.0.0/QuantumLeaps.qpcpp.8.0.0.pack" version="8.0.0">
            QP/C++ 8.0.0. See release notes at https://www.state-machine.com/qpcpp/history.html#qpcpp_8_0_0
        </release>
        <release date="2024-03-21" tag="v7.3.4" url="https://github.com/QuantumLeaps/qpcpp/releases/download/v7.3.4/QuantumLeaps.qpcpp.7.3.4.pack" version="7.3.4">QP/C++ 7.3.4. See release notes at https://www.state-machine.com/qpcpp/history.html#qpcpp_7_3_4
        </release>
        <release date="2024-03-01" tag="v7.3.3" url="https://github.com/QuantumLeaps/qpcpp/releases/download/v7.3.3/QuantumLeaps.qpcpp.7.3.3.pack" version="7.3.3">QP/C++ 7.3.3. See release notes at https://www.state-machine.com/qpcpp/history.html#qpcpp_7_3_3
        </release>
        <release date="2023-12-14" tag="v7.3.2" url="https://github.com/QuantumLeaps/qpcpp/releases/download/v7.3.2/QuantumLeaps.qpcpp.7.3.2.pack" version="7.3.2">QP/C++ 7.3.2. See release notes at https://www.state-machine.com/qpcpp/history.html#qpcpp_7_3_2
        </release>
        <release date="2023-12-05" tag="v7.3.1" url="https://github.com/QuantumLeaps/qpcpp/releases/download/v7.3.1/QuantumLeaps.qpcpp.7.3.1.pack" version="7.3.1">QP/C++ 7.3.1. See release notes at https://www.state-machine.com/qpcpp/history.html#qpcpp_7_3_1
        </release>
        <release date="2023-09-12" tag="v7.3.0" url="https://github.com/QuantumLeaps/qpcpp/releases/download/v7.3.0/QuantumLeaps.qpcpp.7.3.0.pack" version="7.3.0">QP/C++ 7.3.0. See release notes at https://www.state-machine.com/qpcpp/history.html#qpcpp_7_3_0
        </release>
    </releases>
    <keywords>
        <keyword>QuantumLeaps</keyword>
        <keyword>Samek</keyword>
        <keyword>state-machine</keyword>
        <keyword>hierarchical-state-machine</keyword>
        <keyword>QP/C</keyword>
        <keyword>QP/C++</keyword>
        <keyword>QP</keyword>
        <keyword>FSM</keyword>
        <keyword>HSM</keyword>
        <keyword>UML</keyword>
        <keyword>uml-state-machine</keyword>
        <keyword>uml-statechart</keyword>
        <keyword>modeling</keyword>
        <keyword>code-generation</keyword>
        <keyword>actor-model</keyword>
        <keyword>actor</keyword>
        <keyword>embedded-systems</keyword>
        <keyword>event-driven</keyword>
        <keyword>rtos</keyword>
        <keyword>arm-cortex-m</keyword>
        <keyword>embedded-c++</keyword>
        <keyword>active-object</keyword>
        <keyword>real time</keyword>
        <keyword>embedded framework</keyword>
        <keyword>real-time framework</keyword>
        <keyword>RTEF</keyword>
    </keywords>
    <taxonomy>
        <description Cclass="RTEF" doc="https://www.state-machine.com/rtef">Real Time Embedded Framework</description>
    </taxonomy>
    <repository type="git">https://github.com/QuantumLeaps/qpcpp.git</repository>
    <conditions>
        <condition id="ARMCC">
            <accept Tcompiler="ARMCC"/>
        </condition>
        <condition id="GCC">
            <require Tcompiler="GCC"/>
        </condition>
        <condition id="IAR">
            <require Tcompiler="IAR"/>
        </condition>
        <condition id="CoreM">
            <description>Cortex-M processor based device</description>
            <accept Dcore="Cortex-M0"/>
            <accept Dcore="Cortex-M0+"/>
            <accept Dcore="Cortex-M1"/>
            <accept Dcore="Cortex-M23"/>
            <accept Dcore="Cortex-M3"/>
            <accept Dcore="Cortex-M33"/>
            <accept Dcore="Cortex-M35P"/>
            <accept Dcore="Cortex-M85"/>
            <accept Dcore="Cortex-M33"/>
            <accept Dcore="Cortex-M4"/>
            <accept Dcore="Cortex-M7"/>
            <accept Dcore="SC000"/>
            <accept Dcore="SC300"/>
        </condition>
        <condition id="CoreR">
            <description>Cortex-R processor based device</description>
            <accept Dcore="Cortex-R4"/>
        </condition>
        <condition id="CoreM_ARMCC">
            <description>Cortex-M processor based device for the ARM Compiler6</description>
            <require condition="CoreM"/>
            <require condition="ARMCC"/>
        </condition>
        <condition id="CoreM_GCC">
            <description>Cortex-M processor based device for the GNU-ARM</description>
            <require condition="CoreM"/>
            <require condition="GCC"/>
        </condition>
        <condition id="CoreM_IAR">
            <description>Cortex-M processor based device for the IAR-ARM</description>
            <require condition="CoreM"/>
            <require condition="IAR"/>
        </condition>
        <condition id="CoreR_GCC">
            <description>Cortex-R processor based device for the GNU-ARM</description>
            <require condition="CoreR"/>
            <require condition="GCC"/>
        </condition>
        <condition id="CoreR_IAR">
            <description>Cortex-R processor based device for the IAR-ARM</description>
            <require condition="CoreR"/>
            <require condition="IAR"/>
        </condition>
        <condition id="Comp_qep">
            <description>Component qep selected</description>
            <require Cbundle="qpcpp" Cclass="RTEF" Cgroup="Event Processor" Cvariant="qep"/>
        </condition>
        <condition id="Comp_qf">
            <description>Component qf selected</description>
            <require Cbundle="qpcpp" Cclass="RTEF" Cgroup="Framework" Cvariant="qf"/>
        </condition>
        <condition id="CoreM Comp_qf">
            <description>CoreM and Component qf selected</description>
            <require condition="CoreM"/>
            <require Cbundle="qpcpp" Cclass="RTEF" Cgroup="Framework" Cvariant="qf"/>
        </condition>
    </conditions>
    <components>
        <bundle Cbundle="qpcpp" Cclass="RTEF" Cversion="8.0.0">
            <description>QP/C++ RTEF (Real-Time Embedded Framework)</description>
            <doc>https://www.state-machine.com/products/qp/</doc>
            <component Cgroup="Event Processor" Cvariant="qep">
                <description>Events and Hierarchical State Machines</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_QEP      /* QP/C++ QEP */
                </RTE_Components_h>
                <files>
                    <file category="doc" name="https://www.state-machine.com/qpcpp/srs_sm.html"/>
                    <file category="header" name="include/qpcpp.hpp"/>
                    <file category="header" name="include/qp.hpp"/>
                    <file category="header" name="include/qp_pkg.hpp"/>
                    <file category="header" name="include/qsafe.h"/>
                    <file category="header" name="include/qs_dummy.hpp"/>
                    <file category="header" name="include/qstamp.hpp"/>
                    <file category="source" name="src/qf/qep_hsm.cpp"/>
                    <file category="source" name="src/qf/qep_msm.cpp"/>
                </files>
            </component>
            <component Cgroup="Framework" Cvariant="qf" condition="Comp_qep">
                <description>Active-Object (Actor) Framework</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_QF       /* QP/C++ QF */
                </RTE_Components_h>
                <files>
                    <file category="doc" name="https://www.state-machine.com/qpcpp/srs_ao.html"/>
                    <file category="header" name="include/qequeue.hpp"/>
                    <file category="header" name="include/qmpool.hpp"/>
                    <file category="source" name="src/qf/qf_act.cpp"/>
                    <file category="source" name="src/qf/qf_defer.cpp"/>
                    <file category="source" name="src/qf/qf_dyn.cpp"/>
                    <file category="source" name="src/qf/qf_mem.cpp"/>
                    <file category="source" name="src/qf/qf_ps.cpp"/>
                    <file category="source" name="src/qf/qf_qact.cpp"/>
                    <file category="source" name="src/qf/qf_qeq.cpp"/>
                    <file category="source" name="src/qf/qf_qmact.cpp"/>
                    <file category="source" name="src/qf/qf_time.cpp"/>
                </files>
            </component>
            <component Cgroup="Software tracing" Cvariant="qs" condition="Comp_qep">
                <description>Software Tracing (Target-Resident Component)</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_QS       /* QP/C++ QS */
                </RTE_Components_h>
                <files>
                    <file category="doc" name="https://www.state-machine.com/qpcpp/srs_qs.html"/>
                    <file category="header" name="include/README.md"/>
                </files>
            </component>
            <component Cgroup="Real-Time Kernel" Cvariant="qv" condition="Comp_qf">
                <description>Cooperative run-to-completion kernel</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_QV       /* QP/C++ QV kernel */
                </RTE_Components_h>
                <files>
                    <file category="doc" name="https://www.state-machine.com/qpcpp/srs_qv.html"/>
                    <file category="header" name="include/qv.hpp"/>
                    <file category="source" name="src/qf/qf_actq.cpp"/>
                    <file category="source" name="src/qv/qv.cpp"/>
                    <file attr="config" category="header" condition="CoreM" name="ports/arm-cm/qv/config/qp_config.hpp" version="8.0.0"/>
                    <file category="include" condition="CoreM_ARMCC" name="ports/arm-cm/qv/armclang/"/>
                    <file category="source" condition="CoreM_ARMCC" name="ports/arm-cm/qv/armclang/qv_port.cpp"/>
                    <file category="include" condition="CoreM_GCC" name="ports/arm-cm/qv/gnu/"/>
                    <file category="source" condition="CoreM_GCC" name="ports/arm-cm/qv/gnu/qv_port.cpp"/>
                    <file category="include" condition="CoreM_IAR" name="ports/arm-cm/qv/iar/"/>
                    <file category="source" condition="CoreM_IAR" name="ports/arm-cm/qv/iar/qv_port.cpp"/>
                    <file attr="config" category="header " condition="CoreR" name="ports/arm-cr/qv/config/qp_config.hpp" version="8.0.0"/>
                    <file category="include" condition="CoreR_GCC" name="ports/arm-cr/qv/gnu/"/>
                    <file category="include" condition="CoreR_IAR" name="ports/arm-cr/qv/iar/"/>
                </files>
            </component>
            <component Cgroup="Real-Time Kernel" Cvariant="qk" condition="Comp_qf" isDefaultVariant="true">
                <description>Preemptive non-blocking kernel</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_QK       /* QP/C++ QK kernel */
                </RTE_Components_h>
                <files>
                    <file category="doc" name="https://www.state-machine.com/qpcpp/srs_qk.html"/>
                    <file category="header" name="include/qk.hpp"/>
                    <file category="source" name="src/qf/qf_actq.cpp"/>
                    <file category="source" name="src/qk/qk.cpp"/>
                    <file attr="config" category="header" condition="CoreM" name="ports/arm-cm/qk/config/qp_config.hpp" version="8.0.0"/>
                    <file category="include" condition="CoreM_ARMCC" name="ports/arm-cm/qk/armclang/"/>
                    <file category="source" condition="CoreM_ARMCC" name="ports/arm-cm/qk/armclang/qk_port.cpp"/>
                    <file category="include" condition="CoreM_GCC" name="ports/arm-cm/qk/gnu/"/>
                    <file category="source" condition="CoreM_GCC" name="ports/arm-cm/qk/gnu/qk_port.cpp"/>
                    <file category="include" condition="CoreM_IAR" name="ports/arm-cm/qk/iar/"/>
                    <file category="source" condition="CoreM_IAR" name="ports/arm-cm/qk/iar/qk_port.cpp"/>
                    <file attr="config" category="header " condition="CoreR" name="ports/arm-cr/qk/config/qp_config.hpp" version="8.0.0"/>
                    <file category="include" condition="CoreR_GCC" name="ports/arm-cr/qk/gnu/"/>
                    <file category="include" condition="CoreR_IAR" name="ports/arm-cr/qk/iar/"/>
                </files>
            </component>
            <component Cgroup="Real-Time Kernel" Cvariant="qxk" condition="CoreM Comp_qf">
                <description>Preemptive blocking/non-blocking kernel</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_QXK      /* QP/C++ QXK kernel */
                </RTE_Components_h>
                <files>
                    <file category="header" name="include/README.md"/>
                </files>
            </component>
            <component Cgroup="Real-Time Kernel" Cvariant="third-party embOS" condition="Comp_qf">
                <description>QP/C++ port to SEGGER embOS RTOS</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_EMBOS    /* QP/C++-embOS port */
                </RTE_Components_h>
                <files>
                    <file category="doc" name="https://www.state-machine.com/qpcpp/embos.html"/>
                    <file category="header" name="ports/embos/qp_port.hpp"/>
                    <file category="header" name="ports/embos/qs_port.hpp"/>
                    <file attr="config" category="header" name="ports/config/qp_config.hpp" version="8.0.0"/>
                    <file category="include" name="ports/embos/"/>
                    <file category="source" name="ports/embos/qf_port.cpp"/>
                </files>
            </component>
            <component Cgroup="Real-Time Kernel" Cvariant="third-party FreeRTOS" condition="Comp_qf">
                <description>QP/C++ port to Amazon FreeRTOS</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_FREERTOS /* QP/C++-FreeRTOS port */
                </RTE_Components_h>
                <files>
                    <file category="doc" name="https://www.state-machine.com/qpcpp/freertos.html"/>
                    <file category="header" name="ports/freertos/qp_port.hpp"/>
                    <file category="header" name="ports/freertos/qs_port.hpp"/>
                    <file attr="config" category="header" name="ports/config/qp_config.hpp" version="8.0.0"/>
                    <file category="include" name="ports/freertos/"/>
                    <file category="source" name="ports/freertos/qf_port.cpp"/>
                </files>
            </component>
            <component Cgroup="Real-Time Kernel" Cvariant="third-party ThreadX" condition="Comp_qf">
                <description>QP/C++ port to Azure RTOS (ThreadX)</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_THREADX  /* QP/C++-ThreadX port */
                </RTE_Components_h>
                <files>
                    <file category="doc" name="https://www.state-machine.com/qpcpp/threadx.html"/>
                    <file category="header" name="ports/threadx/qp_port.hpp"/>
                    <file category="header" name="ports/threadx/qs_port.hpp"/>
                    <file attr="config" category="header" name="ports/config/qp_config.hpp" version="8.0.0"/>
                    <file category="include" name="ports/threadx/"/>
                    <file category="source" name="ports/threadx/qf_port.cpp"/>
                </files>
            </component>
            <component Cgroup="Real-Time Kernel" Cvariant="third-party uC-OS2" condition="Comp_qf">
                <description>QP/C++ port to Micrium uC-OS2 RTOS</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_UCOS2    /* QP/C++-uC-OS2 port */
                </RTE_Components_h>
                <files>
                    <file category="doc" name="https://www.state-machine.com/qpcpp/uc-os2.html"/>
                    <file category="header" name="ports/uc-os2/qp_port.hpp"/>
                    <file category="header" name="ports/uc-os2/qs_port.hpp"/>
                    <file attr="config" category="header" name="ports/config/qp_config.hpp" version="8.0.0"/>
                    <file category="include" name="ports/uc-os2/"/>
                    <file category="source" name="ports/uc-os2/qf_port.cpp"/>
                </files>
            </component>
            <component Cgroup="Real-Time Kernel" Cvariant="third-party Zephyr" condition="Comp_qf">
                <description>QP/C++ port to Zephyr RTOS</description>
                <RTE_Components_h>
                    #define RTE_RTEF_QPCPP_ZEPHYR   /* QP/C++-Zephyr port */
                </RTE_Components_h>
                <files>
                    <file category="doc" name="https://www.state-machine.com/qpcpp/zephyr.html"/>
                    <file category="header" name="zephyr/qp_port.hpp"/>
                    <file category="header" name="zephyr/qs_port.hpp"/>
                    <file attr="config" category="header" name="ports/config/qp_config.hpp" version="8.0.0"/>
                    <file category="include" name="zephyr/"/>
                    <file category="source" name="zephyr/qf_port.cpp"/>
                </files>
            </component>
        </bundle>
    </components>
</package>
